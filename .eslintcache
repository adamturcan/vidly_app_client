[{"/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/index.js":"1","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/App.js":"2","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/reportWebVitals.js":"3","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/services/authService.js":"4","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/movieform.jsx":"5","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/Movies.jsx":"6","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/logout.jsx":"7","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/MovieInfo.jsx":"8","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/notfound.jsx":"9","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/loginForm.jsx":"10","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/registerForm.jsx":"11","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/protectedRoute.jsx":"12","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/navbar.jsx":"13","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/customers.jsx":"14","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/rentals.jsx":"15","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/Profile.jsx":"16","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/services/httpService.js":"17","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/services/genreService.js":"18","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/services/movieService.js":"19","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/services/userService.js":"20","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/services/rentalService.js":"21","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/services/customerService.js":"22","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/utils/paginate.js":"23","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/Selector.jsx":"24","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/form.jsx":"25","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/moviesTable.jsx":"26","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/filtering.jsx":"27","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/pagination.jsx":"28","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/table.jsx":"29","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/services/logService.js":"30","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/field.jsx":"31","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/input.jsx":"32","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/like.jsx":"33","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/tableBody.jsx":"34","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/tableHeader.jsx":"35","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/rentalsTable.jsx":"36","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/customersTable.jsx":"37"},{"size":618,"mtime":1663570415523,"results":"38","hashOfConfig":"39"},{"size":2042,"mtime":1664094727821,"results":"40","hashOfConfig":"39"},{"size":362,"mtime":1663570415523,"results":"41","hashOfConfig":"39"},{"size":660,"mtime":1663570415523,"results":"42","hashOfConfig":"39"},{"size":2991,"mtime":1663570415519,"results":"43","hashOfConfig":"39"},{"size":7539,"mtime":1664101435340,"results":"44","hashOfConfig":"39"},{"size":271,"mtime":1663570415519,"results":"45","hashOfConfig":"39"},{"size":1374,"mtime":1663704795477,"results":"46","hashOfConfig":"39"},{"size":165,"mtime":1663570415520,"results":"47","hashOfConfig":"39"},{"size":1350,"mtime":1663954589824,"results":"48","hashOfConfig":"39"},{"size":1543,"mtime":1663570415521,"results":"49","hashOfConfig":"39"},{"size":517,"mtime":1663570415520,"results":"50","hashOfConfig":"39"},{"size":1256,"mtime":1664094817540,"results":"51","hashOfConfig":"39"},{"size":1813,"mtime":1664108707698,"results":"52","hashOfConfig":"39"},{"size":5044,"mtime":1664105469669,"results":"53","hashOfConfig":"39"},{"size":9614,"mtime":1664108556953,"results":"54","hashOfConfig":"39"},{"size":690,"mtime":1663570415524,"results":"55","hashOfConfig":"39"},{"size":97,"mtime":1663570415524,"results":"56","hashOfConfig":"39"},{"size":713,"mtime":1663570415525,"results":"57","hashOfConfig":"39"},{"size":401,"mtime":1663570415526,"results":"58","hashOfConfig":"39"},{"size":719,"mtime":1663750962583,"results":"59","hashOfConfig":"39"},{"size":736,"mtime":1664100291854,"results":"60","hashOfConfig":"39"},{"size":189,"mtime":1663570415526,"results":"61","hashOfConfig":"39"},{"size":919,"mtime":1663570415517,"results":"62","hashOfConfig":"39"},{"size":2053,"mtime":1663570415518,"results":"63","hashOfConfig":"39"},{"size":1005,"mtime":1663570415520,"results":"64","hashOfConfig":"39"},{"size":860,"mtime":1663702695513,"results":"65","hashOfConfig":"39"},{"size":1018,"mtime":1663944510014,"results":"66","hashOfConfig":"39"},{"size":456,"mtime":1663706177050,"results":"67","hashOfConfig":"39"},{"size":357,"mtime":1663570415525,"results":"68","hashOfConfig":"39"},{"size":336,"mtime":1663570415518,"results":"69","hashOfConfig":"39"},{"size":372,"mtime":1663570415519,"results":"70","hashOfConfig":"39"},{"size":355,"mtime":1663570415519,"results":"71","hashOfConfig":"39"},{"size":1214,"mtime":1663570415521,"results":"72","hashOfConfig":"39"},{"size":1013,"mtime":1663570415522,"results":"73","hashOfConfig":"39"},{"size":942,"mtime":1663959383497,"results":"74","hashOfConfig":"39"},{"size":814,"mtime":1664110038186,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"pjpkga",{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"78"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},"/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/index.js",[],["161","162"],"/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/App.js",[],"/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/reportWebVitals.js",[],"/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/services/authService.js",[],"/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/movieform.jsx",[],"/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/Movies.jsx",["163","164"],"import React, { Component } from \"react\";\nimport { getMovies, deleteMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\nimport MoviesTable from \"../components/moviesTable\";\nimport _ from \"lodash\";\nimport Pagination from \"./pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport Filtering from \"../components/filtering\";\nimport { NavLink } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { getUserData, updateUser } from \"../services/userService\";\n\nexport default class Movies extends Component {\n  state = {\n    search: \"\",\n    movies: [],\n    moviesByGenre: [],\n    genres: [],\n    pageSize: 4,\n    currentPage: 1,\n    currentFilter: \"All Genres\",\n    sort: { path: \"title\", order: \"asc\" },\n    count: \"\",\n    user: \"\",\n  };\n\n  async componentDidMount() {\n    const { data: genres } = await getGenres();\n\n    const { data: movies } = await getMovies();\n\n    try {\n      const { data: user } = await getUserData();\n      this.setState({ user });\n      const { liked } = user;\n      liked.forEach((i) => {\n        movies.find((m) => {\n          if (m._id === i) return (m.liked = true);\n        });\n        this.setState({ movies, moviesByGenre: movies, genres });\n      });\n    } catch (ex) {\n      this.setState({ movies, moviesByGenre: movies, genres });\n    }\n\n    this.setState({ movies, moviesByGenre: movies, genres });\n  }\n\n  handleDelete = async (e) => {\n    const originalMovies = this.state.movies;\n    const originalMoviesByGenre = this.state.moviesByGenre;\n\n    const movies = this.state.movies.filter((m) => m._id !== e.target.value);\n    const moviesByGenre = this.state.moviesByGenre.filter(\n      (m) => m._id !== e.target.value\n    );\n    this.setState({ movies, moviesByGenre });\n\n    try {\n      await deleteMovie(e);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) {\n        toast.error(\"This movie has already been removed\");\n        this.setState({\n          movies: originalMovies,\n          moviesByGenre: originalMoviesByGenre,\n        });\n      }\n      if (ex.response && ex.response.status === 403) {\n        toast.error(ex.response.data);\n        this.setState({\n          movies: originalMovies,\n          moviesByGenre: originalMoviesByGenre,\n        });\n      }\n      if (ex.response && ex.response.status === 400) {\n        toast.error(\"Please login to make changes\");\n        this.setState({\n          movies: originalMovies,\n          moviesByGenre: originalMoviesByGenre,\n        });\n      }\n    }\n    /* const{data:movies} = await getMovies()\n        this.setState({movies,moviesByGenre:movies})\n      */\n  };\n  handleLike = async (movie) => {\n    try {\n      const { user } = this.state;\n\n      let liked;\n\n      let Userliked = user.liked;\n\n      const a = Userliked.find((i) => i === movie._id);\n\n      if (a) {\n        liked = true;\n      }\n\n      const originalMovies = [...this.state.movies];\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index].liked = !liked;\n      this.setState({ movies });\n\n      liked\n        ? user.liked.splice(user.liked.indexOf(movie._id), 1)\n        : user.liked.push(movie._id);\n      this.setState({ user });\n\n      await updateUser(user);\n    } catch (ex) {\n      return;\n    }\n\n    /*  const movies = [...this.state.movies];\n     const index = movies.indexOf(movie);\n     movies[index].liked = !movies[index].liked;\n     this.setState({movies}) */\n  };\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreChange = (genre) => {\n    this.setState({ currentFilter: genre, currentPage: 1 });\n    if (genre === \"All Genres\")\n      return this.setState({ movies: this.state.moviesByGenre });\n    let moviesByGenre = [...this.state.moviesByGenre];\n    moviesByGenre = moviesByGenre.filter((m) => m.genre.name === genre);\n    this.setState({\n      movies: moviesByGenre,\n    });\n  };\n  handleSort = (sort) => {\n    this.setState({ sort });\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    let search = \"\";\n    search = search += input.value;\n    this.setState({ search, currentPage: 1 });\n  };\n  getPageData = () => {\n    const { pageSize, currentPage, movies: allMovies } = this.state;\n    const reg = new RegExp(this.state.search, \"i\");\n    const movs = [...allMovies];\n    const searched = allMovies.filter((m) => {\n      return m.title.match(reg);\n    });\n    const sorted = _.orderBy(\n      searched,\n      [this.state.sort.path],\n      [this.state.sort.order]\n    );\n    return {\n      movies: paginate(sorted, currentPage, pageSize),\n      count: searched.length,\n      count2: movs,\n    };\n  };\n\n  render() {\n    const { user } = this.props;\n\n    const { movies, count, count2 } = this.getPageData();\n\n    if (count2.length > 0) {\n      return (\n        <div className=\"row\">\n          <div className=\"col-2\">\n            <Filtering\n              onFilterChange={this.handleGenreChange}\n              currentFilter={this.state.currentFilter}\n              items={this.state.genres}\n              textProperty=\"name\"\n              valueProperty=\"_id\"\n              def=\"All Genres\"\n              label=\"Genres \"\n            />\n          </div>\n          <div className=\"col\">          \n            {(user && user.isAdmin) && (\n              <NavLink to=\"/movies/new\">\n                <button\n                  className=\"btn btn-primary m-2\"\n                  onClick={this.handleLink}\n                >\n                  New Movie\n                </button>\n              </NavLink>\n            )}\n            <input\n              type=\"text\"\n              className=\"form-control m-2\"\n              placeholder=\"Search...\"\n              value={this.state.search}\n              onChange={this.handleChange}\n            />\n            <p className=\"m-2\">\n              Showing {movies.length} {movies.length > 1 ? \"movies\" : \"movie\"}{\" \"}\n              out of {this.state.movies.length}\n            </p>\n            <MoviesTable\n              movies={movies}\n              onDelete={this.handleDelete}\n              onLike={this.handleLike}\n              onSort={this.handleSort}\n              sortColumn={this.state.sort}\n            />\n            <Pagination\n              itemsCount={count}\n              pageSize={this.state.pageSize}\n              onPageChange={this.handlePageChange}\n              currentPage={this.state.currentPage}\n            />\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"row\">\n          <div className=\"col-2\">\n            <Filtering\n              onFilterChange={this.handleGenreChange}\n              currentFilter={this.state.currentFilter}\n              items={this.state.genres}\n              textProperty=\"name\"\n              valueProperty=\"_id\"\n            />\n          </div>\n          <div className=\"col\">\n            <div className=\"header\">\n              <p>\n                there are no{\" \"}\n                {this.state.currentFilter !== \"All Genres\"\n                  ? this.state.currentFilter\n                  : \"\"}{\" \"}\n                movies in the database\n              </p>\n            </div>\n            {(user && user.isAdmin) && (\n              <NavLink to=\"/movies/new\">\n                <button\n                  className=\"btn btn-primary m-2\"\n                  onClick={this.handleLink}\n                >\n                  New Movie\n                </button>\n              </NavLink>\n            )}\n          </div>\n        </div>\n      );\n    }\n  }\n}\n","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/logout.jsx",[],"/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/MovieInfo.jsx",[],"/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/notfound.jsx",[],"/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/loginForm.jsx",["165"],"import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./form\";\nimport { getCurrentUser, login } from \"../services/authService\";\nimport { Redirect } from 'react-router-dom';\n\nclass LoginForm extends Form {\n  state = {\n    data: { email: \"\", password: \"\" },\n    errors: {},\n  };\n  schema = {\n    email: Joi.string().required().label(\"Email\").email(),\n    password: Joi.string().required().label(\"Password\"),\n  };\n  doSubmit = async () => {\n    try {\n      await login(this.state.data);\n      console.log(this.props.location)\n      const { state } = this.props.location;\n\n      window.location = state ? state.from.pathname : \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        ex.response.data == \"Invalid Password\"?errors.password = ex.response.data : errors.email = ex.response.data\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    if(getCurrentUser()) return <Redirect to=\"/\"/>\n\n\n\n    return (\n      <div >\n        <h1 className=\"m-2\">Login</h1>\n        <form onSubmit={this.handleSubmit} >\n          {this.renderInput(\"email\", \"Email\", \"email\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderButton(\"Login\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/registerForm.jsx",[],"/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/protectedRoute.jsx",[],"/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/navbar.jsx",[],"/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/customers.jsx",["166","167","168"],"import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport Pagination from \"./pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport Joi from \"joi-browser\";\nimport CustomersTable from \"./customersTable\"\nimport {getCustomers} from \"./../services/customerService\"\n\n\n\n\n\nclass Customers extends Component{\n  state = {\n    data: { name: \"\" },\n    errors: {},\n    customers: [],\n    sort: { path: \"name\", order: \"asc\" },    \n    count:\"\",\n    currentPage:\"\",\n    pageSize:4,\n  };\n\n\n  async componentDidMount() {\n    \n    const {data} = await getCustomers();\n    let customers = []\n\n    for(let customer of data){\n      customers.push({name:customer.name,isGold:customer.isGold,rents:[...customer.rents],phone:customer.phone})\n    }\n    this.setState({customers,currentPage:1})\n    \n    \n   \n  }\n  \n  \n\n\n \n  \n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n  handleSort = (sort) => {\n    this.setState({ sort });\n  };\n\n  getPageData = () => {\n    const { pageSize, currentPage, customers } = this.state;\n    \n    const sorted = _.orderBy(\n      customers,\n      [this.state.sort.path],\n      [this.state.sort.order]\n    );\n      \n \n    return {\n      customers: paginate(sorted, currentPage, pageSize),\n      count: sorted.length,\n   \n    };\n  };\n\n \n  render() {\n\n    const { customers, count } = this.getPageData();\n    \n    \n    return (\n      <div>\n        <h1 className=\"m-2\">Customers</h1>\n       \n        <div className=\"row\">\n           {customers.length > 0 && \n           <CustomersTable\n           data={customers}\n           onSort={this.handleSort}\n           sort={this.state.sort}\n           \n           />\n           \n           \n           \n           }\n          </div>\n         \n\n\n        </div>\n        \n    );\n  }\n}\n\nexport default Customers;\n","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/rentals.jsx",["169","170"],"import React from \"react\";\nimport Form from \"./form\";\nimport \"./Styles/steps.css\";\nimport Selector from \"./Selector\";\nimport { getMovies } from \"./../services/movieService\";\nimport Joi from \"joi-browser\";\nimport { getUserData, updateUser } from \"./../services/userService\";\nimport { addCustomer,getCustomer,updateCustomer } from \"../services/customerService\";\nimport { addRental } from \"../services/rentalService\";\nimport { toast } from \"react-toastify\";\n\nclass rentalForm extends Form {\n  state = {\n    data: { movie: \"\", name: \"\", phone: \"\" },\n    movies: [],\n    movieTitles: [],\n    errors: {},\n    customerSet: false,\n  };\n  schema = {\n    movie: Joi.string(),\n    name: Joi.string().max(30).min(5),\n    phone: Joi.string(),\n  };\n\n  async componentDidMount() {\n    const { data: user } = await getUserData();\n\n    this.setState({\n      customerSet: user.isCustomer,\n    });\n    const { data: movies } = await getMovies();\n    const movieTitles = [];\n    for (let x of movies) {\n      movieTitles.push({ name: x.title });\n    }\n\n    this.setState({\n      movies,\n      movieTitles,\n    });\n  }\n\n  nextPage = async (e) => {\n    const { data: user } = await getUserData();\n    if (user.isCustomer) {\n      this.setState({\n        data: {\n          ...this.state.data,\n          name: user.customer.name,\n          phone: user.customer.phone,\n        },\n      });\n      this.handleSubmit(e);\n      return;\n    }\n    let { name, phone } = this.state.data;\n    console.log(name, phone);\n    if (name && phone) {\n      let schema = { name: Joi.string().max(30).min(5), phone: Joi.string() };\n\n      const { error } = Joi.validate({ name, phone }, schema);\n\n      const reg = /\\d/gi;\n      if (reg.test(name)) {\n        {\n          const errors = { name: \"Name is not allowed to contain numbers\" };\n          this.setState({ errors });\n        }\n      } else {\n        if (!error) {\n          const { data: customer } = await addCustomer({\n            name,\n            phone,\n            isGold: false,\n            rents:[]\n          });\n          user.isCustomer = true;\n          user.customerId = customer._id;\n          await updateUser(user);\n          this.setState({ customerSet: true });\n        }\n      }\n    } else {\n      let name, phone;\n\n      if (!name) {\n        name = \"Name is not allowed to be empty\";\n      }\n      if (!phone) {\n        phone = \"Phone is not allowed to be empty\";\n      }\n\n      this.setState({\n        errors: { name, phone },\n      });\n    }\n  };\n\n  async doSubmit() {\n    const { data: user } = await getUserData();\n    try {\n      let { data: rental } = await addRental({\n        customerId: user.customer._id,\n        movieId: this.state.data.movie,\n      });\n     \n      const {data:customer} = await getCustomer(user.customer._id);\n      \n      customer.rents = [...customer.rents,rental._id]; \n      if(customer.rents.length >= 10){\n        customer.isGold = true\n      }\n      \n      user.customerId = customer._id \n      \n      await updateCustomer(customer._id,{isGold:customer.isGold,name:customer.name,rents:customer.rents,phone:customer.phone})\n      await updateUser(user)\n\n      this.props.history.push(\"/movies\");\n      toast.success(\"Movie successfully rented\");\n    } catch (error) {\n      toast.error(\"Out of stock\");\n    }\n  }\n  handleMovieSet = (e) => {\n    let { _id: movie } = this.state.movies.find(\n      (movie) => movie.title == e.target.value\n    );\n\n    this.setState({\n      data: { ...this.state.data, movie },\n    });\n  };\n\n  render() {\n    const { customerSet } = this.state;\n\n    return (\n      <div>\n        <h1>Rent a movie</h1>\n        <div /*style={{border:\"solid 1px \", borderRadius:'20px',borderColor:\"gray\",height:\"300px\",marginTop:\"50px\"}}*/\n        >\n          <form onSubmit={this.handleSubmit}>\n            {!customerSet && this.renderInput(\"name\", \"Name\")}\n            {!customerSet && this.renderInput(\"phone\", \"Phone\")}\n            {customerSet && (\n              <Selector\n                data={this.state.movieTitles}\n                selected={this.state.movie}\n                onChange={this.handleMovieSet}\n                label=\"Movie\"\n                error={this.state.errors.movie}\n              />\n            )}\n            {!customerSet && (\n              <button\n                className=\"btn btn-primary m-2\"\n                type=\"button\"\n                onClick={this.nextPage}\n              >\n                Become a customer\n              </button>\n            )}\n            {customerSet && (\n              <button\n                className=\"btn btn-primary m-2\"\n                type=\"button\"\n                onClick={this.nextPage}\n              >\n                Submit\n              </button>\n            )}\n\n            <div style={{ textAlign: \"center\", marginTop: \"40px\" }}>\n              <span class={`step ${customerSet ? \"finish\" : \"active\"} `}></span>\n              <span class={`step ${!customerSet ? \"\" : \"active\"} `}></span>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\nexport default rentalForm;\n","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/Profile.jsx",["171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192"],"import React, { Component } from \"react\";\nimport { getMovie ,deleteMovie} from \"../services/movieService\";\nimport MoviesTable from \"../components/moviesTable\";\nimport _ from \"lodash\";\nimport Pagination from \"./pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport Filtering from \"../components/filtering\";\nimport { NavLink } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { getUserData, updateUser } from \"../services/userService\";\nimport Joi from \"joi-browser\";\nimport Form from \"./form\"\nimport RentalsTable from \"./rentalsTable\"\nimport {getRental, returnRental} from \"../services/rentalService\"\nimport {getCurrentUser} from \"../services/authService\"\n\n\n\n\n\nclass Profile extends Form{\n  state = {\n    data: { name: \"\" },\n    errors: {},\n    rents: [],\n    defRents:[],\n    filters:[{name:\"All Rents\"},{name:\"Favorite\"}],\n    sort: { path: \"title\", order: \"asc\" },\n    user: \"\",\n    currentFilter:\"Active Rents\",\n    count:\"\",\n    currentPage:\"\",\n    pageSize:4,\n    liked:[]\n  };\n  schema = {\n    name: Joi.string().max(30).min(5),\n  };\n\n  async componentDidMount() {\n    const { data: user } = await getUserData();\n    this.setState({ user,data: { name: user.name }});\n  \n      const rents = [];\n      if(user.isCustomer){\n        for (let rent of user.customer.rents) {\n\n          const { data: rental } = await getRental(rent);\n       try{\n        const { data: movie } = await getMovie(rental.movie._id);\n        movie.dateOut = rental.dateOut;\n        if(rental.dateReturned){\n          movie.dateReturned = rental.dateReturned\n        }\n        movie.rentId = rental._id\n        rents.push(movie);\n       }\n       catch(ex){\n          continue\n       }\n      }\n      }\n      \n     let liked  =[]\n    \n     for(let like of user.liked){\n       try{\n         let {data:mov}= await getMovie(like)\n         mov.liked = true;\n         liked.push(mov)\n       }\n       catch(ex){\n           continue;\n       }\n           \n     }\n    \n     this.setState({\n       liked\n     })\n     \n       \n      \n\n      this.setState({ rents:rents.filter(r=>r.dateReturned == undefined) ,defRents:rents,count:rents.filter(r=>r.dateReturned == undefined).length})\n   \n    \n\n   \n  }\n  apply = async () => {\n    const { data: user } = await getUserData();\n    user.name = this.state.data.name;\n    console.log(user);\n    await updateUser(user);\n    toast.info(\"changes wil be visible when re-logged in\");\n  };\n  handleSort = (sort) => {\n    this.setState({ sort });\n  };\n\n  \n\n\n  handleReturn = async (e)=>{\n    await returnRental(e.target.value)\n\n    const { data: user } = await getUserData();\n\n    const rents = [];\n    for (let rent of user.customer.rents) {\n      const { data: rental } = await getRental(rent);\n      try{\n       const { data: movie } = await getMovie(rental.movie._id);\n       movie.dateOut = rental.dateOut;\n       if(rental.dateReturned){\n         movie.dateReturned = rental.dateReturned\n       }\n       movie.rentId = rental._id\n       rents.push(movie);\n      }\n      catch(ex){\n         continue\n      }\n    }\n    if(this.state.currentFilter == \"Active Rents\"){\n      this.setState({ data: { name: user.name }, rents:rents.filter(m=>m.dateReturned == undefined) ,defRents:rents});\n    }\n    else{\n      this.setState({ data: { name: user.name }, rents,defRents:rents});\n    }\n    \n\n\n\n\n\n  }\n  handleRentChange = async (filter) => {\n    this.setState({ currentFilter: filter });\n    if(filter == \"Active Rents\"){\n      let movies = this.state.defRents.filter(m=>m.dateReturned == undefined)\n      this.setState({rents:movies,currentPage:1})\n    }\n    if(filter == \"All Rents\"){\n      this.setState({rents:this.state.defRents,currentPage:1})\n      \n    }\n    if(filter == \"Favorite\"){\n      let rents  =[]\n      const {data:user} = await getUserData()\n      console.log(user.liked)\n      for(let like of user.liked){\n        try{\n          let {data:movie}= await getMovie(like)\n          rents.push(movie)\n        }\n        catch(ex){\n            continue;\n        }\n            \n      }\n     \n      this.setState({\n        rents,count:rents.length,currentPage:1\n      })\n      \n    }\n    \n\n  };\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n  getPageData = () => {\n    const { pageSize, currentPage, rents,liked } = this.state;\n    \n    const sorted = _.orderBy(\n      rents,\n      [this.state.sort.path],\n      [this.state.sort.order]\n    );\n    const sortedLiked = _.orderBy(\n      liked,\n      [this.state.sort.path],\n      [this.state.sort.order]\n    );\n \n    return {\n      rents: paginate(sorted, currentPage, pageSize),\n      count: sorted.length,\n      countLike:sortedLiked.length,\n      liked:paginate(sortedLiked, currentPage, pageSize)\n    };\n  };\n\n  handleLike = async(movie)=>{\n    try {\n      const { user } = this.state;\n\n      let liked;\n\n      let Userliked = user.liked;\n\n      const a = Userliked.find((i) => i === movie._id);\n\n      if (a) {\n        liked = true;\n      }\n\n      \n      const movies = [...this.state.liked];\n      const index = movies.indexOf(movie);\n      movies[index].liked = !liked;\n      this.setState({ liked:movies });\n\n      liked\n        ? user.liked.splice(user.liked.indexOf(movie._id), 1)\n        : user.liked.push(movie._id);\n\n      const likes = []\n        for(let like of user.liked){\n          try{\n            let {data:movie}= await getMovie(like)\n            likes.push(movie)\n          }\n          catch(ex){\n              continue;\n          }\n              \n        }\n\n\n\n      this.setState({ user,liked:likes});\n      \n\n      await updateUser(user);\n\n\n\n\n    } catch (ex) {\n      return;\n    }\n  }\n  handleDelete = async(e)=>{\n\n    console.log(e.target.value)\n    const originalLiked = this.state.liked;\n    const originalRents = this.state.rents;\n    const originalDefRents = this.state.defRentes;\n\n    const rents = this.state.rents.filter((m) => m._id !== e.target.value);\n    const defRents = this.state.defRents.filter(\n      (m) => m._id !== e.target.value\n    );\n    const liked = this.state.liked.filter(\n      (m) => m._id !== e.target.value\n    );\n    this.setState({ rents, defRents,liked });\n\n    try {\n      await deleteMovie(e);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) {\n        toast.error(\"This movie has already been removed\");\n        this.setState({\n          rents: originalRents,\n          defRents: originalDefRents,\n          liked:originalLiked\n        });\n      }\n      if (ex.response && ex.response.status === 403) {\n        toast.error(ex.response.data);\n        this.setState({\n          rents: originalRents,\n          defRents: originalDefRents,\n          liked:originalLiked\n        });\n      }\n      if (ex.response && ex.response.status === 400) {\n        toast.error(\"Please login to make changes\");\n        this.setState({\n          rents: originalRents,\n          defRents: originalDefRents,\n          liked:originalLiked\n        });\n      }\n    }\n  }\n  render() {\n\n    const { rents, count,countLike,liked } = this.getPageData();\n    console.log(liked)\n    const user = getCurrentUser();\n    return (\n      <div>\n        <h1 className=\"m-2\">{user.name}</h1>\n        <h6 className=\"m-5\">\n          {this.renderInput(\"name\", \"Change your Nickame\")}\n          <button\n            className=\"btn btn-primary m-2\"\n            type=\"button\"\n            onClick={this.apply}\n          >\n            Apply changes\n          </button>\n        </h6>\n        <div className=\"row\">\n          <div className=\"col-2\"><Filtering\n        \n        onFilterChange={this.handleRentChange}\n        currentFilter={this.state.currentFilter}\n        items={this.state.filters}\n        textProperty=\"name\"\n        valueProperty=\"name\"\n        def=\"Active Rents\"\n      />\n          </div>\n          <div className=\"col\">\n            {((this.state.currentFilter == \"Active Rents\" || this.state.currentFilter == \"All Rents\")&& rents.length == 0)&&\n            <div className=\"header\">  <p>\n            You currently have no Rented Movies\n          </p></div>\n            \n            }\n\n{(this.state.currentFilter != \"Favorite\" && rents.length >0) &&  <p>\n               Showing {rents.length} {rents.length > 1 ?\"rents\":\"rent\"} out of {this.state.rents.length}\n             </p> }  \n             { (this.state.currentFilter != \"Favorite\" && rents.length != 0 ) &&  <RentalsTable\n                movies={rents}\n                onSort={this.handleSort}\n                sort={this.state.sort}\n                onReturn={this.handleReturn}\n                />\n             }  \n             {(this.state.currentFilter == \"Favorite\" && liked.length == 0)&& <div className=\"header\">\n               <p>You have no liked Movies</p>\n               </div>}\n\n             {(this.state.currentFilter == \"Favorite\" && liked.length >0) &&  <p>\n               Showing {liked.length} {liked.length > 1 ?\"movies\":\"movie\"} out of {this.state.liked.length}\n             </p> }  \n              \n             {(this.state.currentFilter == \"Favorite\" && liked.length != 0)&& <MoviesTable\n              movies={liked}\n              onDelete={this.handleDelete}\n              onLike={this.handleLike}\n              onSort={this.handleSort}\n              sortColumn={this.state.sort}\n             />}\n             <Pagination\n              itemsCount={this.state.currentPage == \"Favorite\"?countLike:count}\n              pageSize={this.state.pageSize}\n              onPageChange={this.handlePageChange}\n              currentPage={this.state.currentPage}\n            />\n          </div>\n        </div>\n        </div>\n        \n    );\n  }\n}\n\nexport default Profile;\n","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/services/httpService.js",["193"],"import axios from 'axios';\nimport {toast} from 'react-toastify'\nimport logger from './logService'\n\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\n\n\n\naxios.interceptors.response.use(null, error=>{\n    const expectedError = error.response && error.response.status >= 400 && error.response.status < 500\n    \n  \n    if(!expectedError) {\n        logger.log(error)\n      toast.error(\"An unexpected error occured.\")\n    }\n  \n  \n  \n  return Promise.reject(error)\n  \n  });\n\n function setJwt(jwt){\n    axios.defaults.headers.common['x-auth-token'] =jwt\n  }\n\n  export default {\n      get: axios.get,\n      post: axios.post,\n      put: axios.put,\n      delete: axios.delete,\n      setJwt\n  }","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/services/genreService.js",[],"/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/services/movieService.js",[],"/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/services/userService.js",["194","195"],"import { identity } from 'lodash';\nimport http from './httpService'\n\n\nconst apiEndpoint = '/users';\n\nexport function register(user){\n        return http.post(apiEndpoint,user)\n  \n\n}\nexport async function getUserData() {\n        return  http.get(apiEndpoint+\"/me\") \n        \n      }\nexport async function updateUser(user){  \n        const id = user._id\n        await http.put(apiEndpoint+ \"/me\",user)\n}","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/services/rentalService.js",[],"/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/services/customerService.js",[],"/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/utils/paginate.js",[],"/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/Selector.jsx",[],"/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/form.jsx",[],"/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/moviesTable.jsx",[],"/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/filtering.jsx",[],"/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/pagination.jsx",[],"/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/table.jsx",[],"/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/services/logService.js",["196"],"/* import Raven from 'raven-js' */\n\n\nfunction init() {\n   /*  Raven.config('https://05323d37c9a947eba9daaaab1e6171a9@sentry.io/1249956',{\n        release: '1-0-0',\n        environment: 'development-test',\n    }).install(); */\n}\n\nfunction log(error) {\n    /* Raven.captureException(error); */\n    console.error(error)\n}\n\nexport default {\n    init,\n    log\n};","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/field.jsx",[],"/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/input.jsx",[],"/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/like.jsx",[],"/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/tableBody.jsx",[],"/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/tableHeader.jsx",[],"/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/rentalsTable.jsx",["197","198","199"],"import React, { Component } from \"react\";\nimport Like from \"./like\";\nimport Table from \"./table\";\nimport { getCurrentUser } from \"../services/authService\";\n\nclass RentalsTable extends Component {\n  columns = [\n    { path: \"title\", label: \"Title\" },\n    { path: \"genre.name\", label: \"Genre\" },\n    { path: \"dateOut\", label: \"Date out\" },\n    {path: \"dateReturned\",label:\"Date Returned\"},\n    {\n      key: \"Return\",\n      content: (movie) => (\n        movie.dateReturned == undefined && <button\n          value={movie.rentId}\n          className=\"btn btn-info\"\n          onClick={this.props.onReturn}\n        >\n          Return\n        </button>\n      ),\n    },\n  \n  ];\n\n  render() {\n    let { columns } = this;\n\n    const { movies, onSort } = this.props;\n\n    return (\n      <Table\n        data={movies}\n        columns={columns}\n        onSort={onSort}\n        sortColumn={this.props.sort}\n      />\n    );\n  }\n}\n\nexport default RentalsTable;\n","/Users/iturcan/Desktop/Adam's workspace/vidly_app_client/src/components/customersTable.jsx",["200"],"import React, { Component } from 'react'\nimport Table from \"./table\";\n\nimport { getUserData } from '../services/userService';\nexport default class CustomersTable extends Component {\n\n  state={\n    user:\"\"\n  }\n\n  columns = [\n    { path: \"name\", label: \"Name\" },\n    {path:\"rents.length\",label:\"Rented\"},  \n   \n  ];\n  \n  componentDidMount = async() =>{\n    const {data:user} = await getUserData();\n    console.log(user)\n    this.setState({user})\n  }\n  render() {\n    let { columns } = this;\n    if(this.state.user.isAdmin == true){\n     columns.push( {label:\"Phone\",content:customer=> <p>{customer.phone}</p> })\n    }\n\n\n    const { data, onSort ,sort} = this.props;\n  \n    return (\n      <Table\n        data={data}\n        columns={columns}\n        onSort={onSort}\n        sortColumn={sort}\n      />\n    );\n  }\n  }\n\n",{"ruleId":"201","replacedBy":"202"},{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","severity":1,"message":"206","line":37,"column":25,"nodeType":"207","messageId":"208","endLine":37,"endColumn":27},{"ruleId":"209","severity":1,"message":"210","line":102,"column":13,"nodeType":"211","messageId":"212","endLine":102,"endColumn":27},{"ruleId":"213","severity":1,"message":"214","line":26,"column":26,"nodeType":"215","messageId":"216","endLine":26,"endColumn":28},{"ruleId":"209","severity":1,"message":"217","line":3,"column":8,"nodeType":"211","messageId":"212","endLine":3,"endColumn":18},{"ruleId":"209","severity":1,"message":"218","line":5,"column":8,"nodeType":"211","messageId":"212","endLine":5,"endColumn":11},{"ruleId":"209","severity":1,"message":"219","line":71,"column":24,"nodeType":"211","messageId":"212","endLine":71,"endColumn":29},{"ruleId":"220","severity":1,"message":"221","line":66,"column":9,"nodeType":"222","messageId":"223","endLine":69,"endColumn":10},{"ruleId":"213","severity":1,"message":"214","line":128,"column":30,"nodeType":"215","messageId":"216","endLine":128,"endColumn":32},{"ruleId":"209","severity":1,"message":"224","line":1,"column":17,"nodeType":"211","messageId":"212","endLine":1,"endColumn":26},{"ruleId":"209","severity":1,"message":"225","line":8,"column":10,"nodeType":"211","messageId":"212","endLine":8,"endColumn":17},{"ruleId":"213","severity":1,"message":"214","line":85,"column":60,"nodeType":"215","messageId":"216","endLine":85,"endColumn":62},{"ruleId":"213","severity":1,"message":"214","line":85,"column":127,"nodeType":"215","messageId":"216","endLine":85,"endColumn":129},{"ruleId":"213","severity":1,"message":"214","line":126,"column":33,"nodeType":"215","messageId":"216","endLine":126,"endColumn":35},{"ruleId":"213","severity":1,"message":"214","line":127,"column":87,"nodeType":"215","messageId":"216","endLine":127,"endColumn":89},{"ruleId":"213","severity":1,"message":"214","line":141,"column":15,"nodeType":"215","messageId":"216","endLine":141,"endColumn":17},{"ruleId":"213","severity":1,"message":"214","line":142,"column":65,"nodeType":"215","messageId":"216","endLine":142,"endColumn":67},{"ruleId":"213","severity":1,"message":"214","line":145,"column":15,"nodeType":"215","messageId":"216","endLine":145,"endColumn":17},{"ruleId":"213","severity":1,"message":"214","line":149,"column":15,"nodeType":"215","messageId":"216","endLine":149,"endColumn":17},{"ruleId":"213","severity":1,"message":"214","line":322,"column":41,"nodeType":"215","messageId":"216","endLine":322,"endColumn":43},{"ruleId":"213","severity":1,"message":"214","line":322,"column":87,"nodeType":"215","messageId":"216","endLine":322,"endColumn":89},{"ruleId":"213","severity":1,"message":"214","line":322,"column":118,"nodeType":"215","messageId":"216","endLine":322,"endColumn":120},{"ruleId":"213","severity":1,"message":"226","line":329,"column":28,"nodeType":"215","messageId":"216","endLine":329,"endColumn":30},{"ruleId":"213","severity":1,"message":"226","line":332,"column":42,"nodeType":"215","messageId":"216","endLine":332,"endColumn":44},{"ruleId":"213","severity":1,"message":"226","line":332,"column":72,"nodeType":"215","messageId":"216","endLine":332,"endColumn":74},{"ruleId":"213","severity":1,"message":"214","line":339,"column":41,"nodeType":"215","messageId":"216","endLine":339,"endColumn":43},{"ruleId":"213","severity":1,"message":"214","line":339,"column":71,"nodeType":"215","messageId":"216","endLine":339,"endColumn":73},{"ruleId":"213","severity":1,"message":"214","line":343,"column":41,"nodeType":"215","messageId":"216","endLine":343,"endColumn":43},{"ruleId":"213","severity":1,"message":"214","line":347,"column":41,"nodeType":"215","messageId":"216","endLine":347,"endColumn":43},{"ruleId":"213","severity":1,"message":"226","line":347,"column":71,"nodeType":"215","messageId":"216","endLine":347,"endColumn":73},{"ruleId":"213","severity":1,"message":"214","line":355,"column":50,"nodeType":"215","messageId":"216","endLine":355,"endColumn":52},{"ruleId":"227","severity":1,"message":"228","line":30,"column":3,"nodeType":"229","endLine":36,"endColumn":4},{"ruleId":"209","severity":1,"message":"230","line":1,"column":10,"nodeType":"211","messageId":"212","endLine":1,"endColumn":18},{"ruleId":"209","severity":1,"message":"231","line":17,"column":15,"nodeType":"211","messageId":"212","endLine":17,"endColumn":17},{"ruleId":"227","severity":1,"message":"228","line":16,"column":1,"nodeType":"229","endLine":19,"endColumn":3},{"ruleId":"209","severity":1,"message":"232","line":2,"column":8,"nodeType":"211","messageId":"212","endLine":2,"endColumn":12},{"ruleId":"209","severity":1,"message":"233","line":4,"column":10,"nodeType":"211","messageId":"212","endLine":4,"endColumn":24},{"ruleId":"213","severity":1,"message":"214","line":15,"column":28,"nodeType":"215","messageId":"216","endLine":15,"endColumn":30},{"ruleId":"213","severity":1,"message":"214","line":24,"column":32,"nodeType":"215","messageId":"216","endLine":24,"endColumn":34},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"array-callback-return","Array.prototype.find() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'originalMovies' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Pagination' is defined but never used.","'Joi' is defined but never used.","'count' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Component' is defined but never used.","'NavLink' is defined but never used.","Expected '!==' and instead saw '!='.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'identity' is defined but never used.","'id' is assigned a value but never used.","'Like' is defined but never used.","'getCurrentUser' is defined but never used.","no-global-assign","no-unsafe-negation"]